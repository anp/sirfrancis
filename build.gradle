plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '1.2.0'
    id 'org.hidetake.ssh' version '1.0.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '0.1-COMINGSOON'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

//fill this out and uncomment
mainClassName = 'io.sirfrancis.bacon.BaconApplication'

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

dependencies {
    def dropwizardVersion = '0.7.1'
    def orientDBVersion = '2.0-SNAPSHOT'
    compile(
            'io.dropwizard:dropwizard-core:' + dropwizardVersion,
            'io.dropwizard:dropwizard-client:' + dropwizardVersion,
            'io.dropwizard:dropwizard-auth:' + dropwizardVersion,
            'io.dropwizard:dropwizard-views-mustache:' + dropwizardVersion,
            'com.orientechnologies:orientdb-graphdb:' + orientDBVersion,
            'com.sendgrid:sendgrid-java:2.0.0'
    )
    testCompile 'junit:junit:4.11'
}

run {
    //MAKE SURE CONFIG PATH IS CORRECT
    args 'server', 'bacon-local.yml'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

// Configure the shadow jar task
shadowJar {
    mergeServiceFiles()
    exclude('META-INF/*.DSA')
    exclude('META-INF/*.RSA')
}

jar {
    manifest {
        attributes (
            'Main-Class': mainClassName,
            'Implementation-Title': "Bacon",
            'Implementation-Version': version
        )
    }
}

remotes {
    main_server {
        host = '192.241.204.245'
        user = 'francis'
        identity = new File('C:\\Users\\adamn_000\\Dropbox\\Projects\\Bacon\\technical\\francis_openssh.ppk')
        passphrase = 'no one will know'
    }
}

task deploy(dependsOn: ['clean', 'shadowJar']) {
    ssh.run {
        session(remotes.main_server) {
            def localJar = 'sirfrancis-' + version + '-all.jar'
            put 'build\\libs\\' + localJar, '/opt/bacon/'
            put 'bacon-server.yml', '/opt/bacon/'
            put 'static/', '/opt/bacon/'
            //TODO prevent error if service not running or files not present
            execute 'sudo stop sirfrancis'
            execute 'rm /opt/bacon/sirfrancis-current.jar'
            execute 'rm /opt/bacon/bacon.yml'
            execute 'mv /opt/bacon/bacon-server.yml /opt/bacon/bacon.yml'
            execute 'mv /opt/bacon/' + localJar + ' /opt/bacon/sirfrancis-current.jar'
            execute 'sudo start sirfrancis'
        }
    }
}
